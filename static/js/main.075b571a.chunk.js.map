{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","cardComponent","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onSearchChange","event","target","value","_this2","fetch","then","response","json","users","_this3","filteredRobots","filter","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrorBoundary","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.075b571a.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name, email, id}) => {\n    return (\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2'>\n            <img alt='robots' src={`https://robohash.org/${id}200x200`}/>\n            <div>\n                <h2>\n                    {name}\n                </h2>\n                <p>\n                    {email}\n                </p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n    const cardComponent = robots.map((user, i) => {\n        return <Card key={robots.id} id={robots[i].id} name={robots[i].name} email={robots[i].email} />\n    })\n    return (\n        <div>\n            {cardComponent}\n        </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\nimport 'tachyons';\n\n\nconst SearchBox = ({searchfield, searchChange}) => {\n    return (\n        <div className='pa2'>\n            <input \n                className='pa3 ba b--green bg-lightest-blue'\n                type='search' \n                placeholder='search robots'\n                onChange={searchChange}\n                />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '5px solid black', height: '500px'}}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Scroll;","import React, {Component} from 'react';\n\nclass ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true })\n    }\n\n    render() {\n        if(this.state.hasError) {\n            return <h1>Couldnt load the pictures</h1>\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary'\nimport './App.css'\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            robots: [   ],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() {\n        // When Page refreses this is run.\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => { \n                return response.json();\n            })\n            .then(users => {\n                return this.setState({ robots: users });\n            })\n    }\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value })\n    }\n    render () {\n        const filteredRobots = this.state.robots.filter(robots => {\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n        })\n        if(this.state.robots.length === 0) {\n            return <h1>Loading</h1>\n        } else {\n            return(\n                <div className='tc'>\n                    <h1 className='f1'>Robo Friends</h1>\n                    <SearchBox searchChange={this.onSearchChange}/>\n                    <Scroll>\n                        <ErrorBoundary>\n                            <CardList robots={filteredRobots} />\n                        </ErrorBoundary>\n                    </Scroll>\n                </div>\n            );\n        }\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}